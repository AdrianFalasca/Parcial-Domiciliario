// C++ code
//
#define UNIDAD 3
#define DECENA 2
#define RESET 4
#define G 13
#define F 12
#define A 11
#define B 10
#define E 9
#define D 8
#define C 7


int antPresionado1 = 1;
int antPresionado2 = 1;
int contadorDecena = 0;
int contadorUnidad = 0;
int digito;
int cambiaDisplay = 0;

void setup()
{
  pinMode(G, OUTPUT);
  pinMode(F, OUTPUT);
  pinMode(A, OUTPUT);
  pinMode(B, OUTPUT);
  pinMode(E, OUTPUT);
  pinMode(D, OUTPUT);
  pinMode(C, OUTPUT);
  pinMode(A4, OUTPUT);
  pinMode(A5, OUTPUT);
  pinMode(UNIDAD, INPUT_PULLUP);
  pinMode(DECENA, INPUT_PULLUP);
  pinMode(RESET, INPUT_PULLUP);
}

void loop()// llama a las dos fuciones.
{   
  alternarDisplays();
  presionando(); 
 }


void presionando(){
  //Función para que sólo incremente o decremente un número a la vez la unidad y la decena. 
  int presionado1 = digitalRead(UNIDAD);
  int presionado2 = digitalRead(DECENA);
  int presionado3 = digitalRead(RESET);
  
    if (presionado1 == 0 && antPresionado1 == 1){

    	if (contadorUnidad == 9){//si la unidad es igual a 9, el contador de la unidad vuelve a 0.
      		contadorUnidad = 0;
            if (contadorDecena == 9){//si la decena es igual a 9, el contador de la decena vuelve a 0
        		contadorDecena = 0;
      		}
       		else{
      			contadorDecena++;
      		}

      	}          
    	else{
			contadorUnidad++;
     	}
 	 }
  
  antPresionado1 = presionado1;
  
//-------------------------------------------------------------------
  if (presionado2 == 0 && antPresionado2 == 1){
    
    if (contadorUnidad == 0){//si la unidad es igual a 0, el contador de la unidad pasa a valer 9.
      contadorUnidad = 9;
      if (contadorDecena == 0){//si la decena es igual a 0, el contador de la decena pasa a valer 9
        contadorDecena = 9;
        }
      else{
        contadorDecena --;}
    }
      else{
		contadorUnidad--;      }
  }
  
    antPresionado2 = presionado2;

//----------------------------------------------------------  
  if (presionado3 == 0){
    contadorUnidad = 0;
    contadorDecena = 0;
  }
}

void alternarDisplays()
{//función para alternan los displays.
  //Llama a la función que visualiza la decena o unidad.
    
    if (cambiaDisplay == 0) {    
      digitalWrite(A4, HIGH);      
      digitalWrite(A5, LOW);
      delay(50);
      contadorDigito(contadorUnidad);
      cambiaDisplay=1;          
      
    }
  else{
   	digitalWrite(A4, LOW);      
    digitalWrite(A5, HIGH);
    delay(50);
    contadorDigito(contadorDecena);
    cambiaDisplay=0;             
      
    }
}

 void contadorDigito(int digito)
  {//función para encender y apagar los dígitos de ambos displays.
    //Se le pasa como parámetro la decena o la unidad para que la visualice.

  	digitalWrite(C, LOW);
    digitalWrite(D, LOW);
    digitalWrite(E, LOW);
    digitalWrite(B, LOW);
    digitalWrite(A, LOW);
    digitalWrite(F, LOW);
	digitalWrite(G, LOW);  

   
switch(digito){
  
case 0:
  	digitalWrite(C, HIGH);
    digitalWrite(D, HIGH);
    digitalWrite(E, HIGH);
    digitalWrite(B, HIGH);
    digitalWrite(A, HIGH);
    digitalWrite(F, HIGH);
  break;

case 1:
    digitalWrite(C, HIGH);
    digitalWrite(B, HIGH);
  break;

case 2:
    digitalWrite(D, HIGH);
    digitalWrite(E, HIGH);
    digitalWrite(B, HIGH);
    digitalWrite(A, HIGH);
	digitalWrite(G, HIGH);
  break;

case 3:
    digitalWrite(C, HIGH);
    digitalWrite(D, HIGH);
    digitalWrite(B, HIGH);
    digitalWrite(A, HIGH);
	digitalWrite(G, HIGH);
  break;

case 4:
    digitalWrite(C, HIGH);
    digitalWrite(B, HIGH);
    digitalWrite(F, HIGH);
	digitalWrite(G, HIGH);
  break;

case 5:
    digitalWrite(C, HIGH);
    digitalWrite(D, HIGH);
    digitalWrite(A, HIGH);
    digitalWrite(F, HIGH);
	digitalWrite(G, HIGH);
  break;

case 6:
    digitalWrite(C, HIGH);
    digitalWrite(D, HIGH);
    digitalWrite(E, HIGH);
    digitalWrite(A, HIGH);
    digitalWrite(F, HIGH);
	digitalWrite(G, HIGH);
  break;
  
case 7:
    digitalWrite(C, HIGH);
    digitalWrite(B, HIGH);
    digitalWrite(A, HIGH);
  break;

case 8:
    digitalWrite(C, HIGH);
    digitalWrite(D, HIGH);
    digitalWrite(E, HIGH);
    digitalWrite(B, HIGH);
    digitalWrite(A, HIGH);
    digitalWrite(F, HIGH);
	digitalWrite(G, HIGH);
  break;

case 9:
    digitalWrite(C, HIGH);
    digitalWrite(B, HIGH);
    digitalWrite(A, HIGH);
    digitalWrite(F, HIGH);
	digitalWrite(G, HIGH);
  break;

}}